<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tian.webapp.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.tian.webapp.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="date_create" jdbcType="TIMESTAMP" property="dateCreate" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="date_update" jdbcType="TIMESTAMP" property="dateUpdate" />
    <result column="date_delete" jdbcType="TIMESTAMP" property="dateDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, password, age, creator, date_create, modifier, date_update, date_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tian.webapp.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user (id, username, password, 
      age, creator, date_create, 
      modifier, date_update, date_delete
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, #{dateCreate,jdbcType=TIMESTAMP}, 
      #{modifier,jdbcType=VARCHAR}, #{dateUpdate,jdbcType=TIMESTAMP}, #{dateDelete,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tian.webapp.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="dateCreate != null">
        date_create,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="dateUpdate != null">
        date_update,
      </if>
      <if test="dateDelete != null">
        date_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="dateCreate != null">
        #{dateCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="dateUpdate != null">
        #{dateUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="dateDelete != null">
        #{dateDelete,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tian.webapp.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="dateCreate != null">
        date_create = #{dateCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="dateUpdate != null">
        date_update = #{dateUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="dateDelete != null">
        date_delete = #{dateDelete,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tian.webapp.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      date_create = #{dateCreate,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=VARCHAR},
      date_update = #{dateUpdate,jdbcType=TIMESTAMP},
      date_delete = #{dateDelete,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <!--用户登录验证-->
    <select id="userlogin" resultType="com.tian.webapp.model.User">
        SELECT id,username,password,age FROM user WHERE username = #{username} AND password = #{password}
    </select>

    <!--新用户注册  方式1-->
    <insert id="adduser" useGeneratedKeys="true">
        INSERT INTO user (username,password,age,date_create) VALUES (#{username},#{password},#{age},#{dateCreate})
    </insert>

    <!--新用户注册  方式2-->
    <insert id="adduser1" >
        INSERT INTO user (id,username,password,age) VALUES (UUID(),#{username},#{password},#{age})
    </insert>

</mapper>